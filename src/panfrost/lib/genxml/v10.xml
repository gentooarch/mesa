<panxml arch="10">
  <enum name="Attribute Type">
    <value name="1D" value="1"/>
    <value name="1D POT Divisor" value="2"/>
    <value name="1D NPOT Divisor" value="3"/>
    <value name="1D Primitive Index Buffer" value="5"/>
    <value name="Vertex packet" value="6"/>
  </enum>

  <enum name="Channel">
    <value name="R" value="0"/>
    <value name="G" value="1"/>
    <value name="B" value="2"/>
    <value name="A" value="3"/>
    <value name="0" value="4"/>
    <value name="1" value="5"/>
  </enum>

  <enum name="Depth Source">
    <value name="Minimum" value="0"/>
    <value name="Maximum" value="1"/>
    <value name="Fixed function" value="2"/>
    <value name="Shader" value="3"/>
  </enum>

  <enum name="Depth Clamp Mode">
    <value name="[0, 1]" value="1"/>
    <value name="Bounds" value="2"/>
  </enum>

  <!-- Only used for pandecode shader type -->
  <enum name="Job Type">
    <value name="Compute" value="4"/>
    <value name="Tiler" value="7"/>
    <value name="Fragment" value="9"/>
  </enum>

  <enum name="Shader stage">
    <value name="Compute" value="1"/>
    <value name="Fragment" value="2"/>
    <value name="Vertex" value="3"/>
  </enum>

  <enum name="Descriptor Type">
    <value name="Sampler" value="1"/>
    <value name="Texture" value="2"/>
    <value name="Attribute" value="5"/>
    <value name="Depth/stencil" value="7"/>
    <value name="Shader" value="8"/>
    <value name="Buffer" value="9"/>
    <value name="Plane" value="10"/>
  </enum>

  <enum name="Buffer Type">
    <value name="Simple" value="1"/>
    <value name="Tiler heap" value="2"/>
    <value name="Structure" value="3"/>
    <value name="Vertex packet" value="4"/>
  </enum>

  <enum name="Draw Mode">
    <value name="None" value="0"/>
    <value name="Points" value="1"/>
    <value name="Lines" value="2"/>
    <value name="Line strip" value="4"/>
    <value name="Line loop" value="6"/>
    <value name="Triangles" value="8"/>
    <value name="Triangle strip" value="10"/>
    <value name="Triangle fan" value="12"/>
    <value name="Polygon" value="13"/>
    <value name="Quads" value="14"/>
  </enum>

  <enum name="Exception Access">
    <value name="None" value="0"/>
    <value name="Execute" value="2"/>
    <value name="Read" value="1"/>
    <value name="Write" value="3"/>
  </enum>

  <enum name="Func">
    <value name="Never" value="0"/>
    <value name="Less" value="1"/>
    <value name="Equal" value="2"/>
    <value name="Lequal" value="3"/>
    <value name="Greater" value="4"/>
    <value name="Not Equal" value="5"/>
    <value name="Gequal" value="6"/>
    <value name="Always" value="7"/>
  </enum>

  <enum name="Address Mode">
    <value name="Flat" value="0"/>
    <value name="Packed" value="1"/>
  </enum>

  <enum name="Format">
    <!--
      Used to index into the TEXTURE_FEATURES register, which indicates support
      for compressed texture formats. The enum is no longer used for pixel
      format descriptors, but the naming is kept consistent with previous Mali
      generations for backwards compatibility.
    -->
    <value name="ETC2 RGB8" value="1"/>
    <value name="ETC2 R11 UNORM" value="2"/>
    <value name="ETC2 RGBA8" value="3"/>
    <value name="ETC2 RG11 UNORM" value="4"/>
    <value name="BC1 UNORM" value="7"/>
    <value name="BC2 UNORM" value="8"/>
    <value name="BC3 UNORM" value="9"/>
    <value name="BC4 UNORM" value="10"/>
    <value name="BC4 SNORM" value="11"/>
    <value name="BC5 UNORM" value="12"/>
    <value name="BC5 SNORM" value="13"/>
    <value name="BC6H UF16" value="14"/>
    <value name="BC6H SF16" value="15"/>
    <value name="BC7 UNORM" value="16"/>
    <value name="ETC2 R11 SNORM" value="17"/>
    <value name="ETC2 RG11 SNORM" value="18"/>
    <value name="ETC2 RGB8A1" value="19"/>
    <value name="ASTC 3D LDR" value="20"/>
    <value name="ASTC 3D HDR" value="21"/>
    <value name="ASTC 2D LDR" value="22"/>
    <value name="ASTC 2D HDR" value="23"/>
    <value name="ASTC 2D NARROW" value="62"/>
    <value name="ASTC 3D NARROW" value="63"/>

    <!-- Actual enum values follow -->
    <value name="YUV8" value="32"/>
    <value name="YUVA8" value="33"/>
    <value name="YUYV8" value="34"/>
    <value name="VYUY8" value="35"/>
    <value name="Y8 UV8 422" value="36"/>
    <value name="Y8 U8 V8 422" value="37"/>
    <value name="Y8 UV8 420" value="38"/>
    <value name="Y8 U8 V8 420" value="39"/>
    <value name="YUV10 A2" value="40"/>
    <value name="A2 YUV10" value="41"/>
    <value name="YUYAAYVYAA" value="42"/>
    <!--- TODO: revisit YUV -->
    <value name="YUYV10" value="44"/>
    <value name="VYUY10" value="45"/>
    <value name="Y10 UV10 422" value="46"/>
    <value name="Y10 UV10 420" value="47"/>
    <value name="YUV16" value="48"/>
    <value name="YUVA16" value="49"/>
    <value name="YUYV16" value="50"/>
    <value name="VYUY16" value="51"/>
    <value name="Y10X6 U10X6V10X6 422" value="52"/>
    <value name="Y16 UV16 422" value="53"/>
    <value name="Y16 UV16 420" value="55"/>
    <value name="RGB565" value="64"/>
    <value name="RGB5 A1 UNORM" value="65"/>
    <value name="A1 BGR5 UNORM" value="66"/>
    <value name="RGB10 A2 UNORM" value="67"/>
    <value name="A2 BGR10 UNORM" value="68"/>
    <value name="RGB10 A2 SNORM" value="69"/>
    <value name="A2 BGR10 SNORM" value="70"/>
    <value name="RGB10 A2UI" value="71"/>
    <value name="A2 BGR10UI" value="72"/>
    <value name="RGB10 A2I" value="73"/>
    <value name="A2 BGR10I" value="74"/>
    <value name="Z16 UNORM" value="75"/>
    <value name="Z32" value="76"/>
    <value name="Z24X8 UNORM" value="77"/>
    <value name="X8Z24" value="78"/>
    <value name="R32 FIXED" value="81"/>
    <value name="RG32 FIXED" value="82"/>
    <value name="RGB32 FIXED" value="83"/>
    <value name="RGBA32 FIXED" value="84"/>
    <value name="R11F G11F B10F" value="89"/>
    <value name="B10F G11F R11F" value="90"/>
    <value name="R9F G9F B9F E5F" value="91"/>
    <value name="E5F B9F G9F R9F" value="92"/>
    <value name="S8" value="93"/>
    <!--- RGBA32F + snap to 2^-8, used for vertex writes -->
    <value name="Snap 4" value="94"/>
    <value name="Constant" value="95"/>
    <!--- 96-98 reserved -->
    <value name="R8 SNORM" value="99"/>
    <value name="R16 SNORM" value="100"/>
    <value name="R32 SNORM" value="101"/>
    <!--- 102-105 reserved -->
    <value name="RG4 SNORM" value="106"/>
    <value name="RG8 SNORM" value="107"/>
    <value name="RG16 SNORM" value="108"/>
    <value name="RG32 SNORM" value="109"/>
    <!-- 110-114 reserved -->
    <value name="RGB8 SNORM" value="115"/>
    <value name="RGB16 SNORM" value="116"/>
    <value name="RGB32 SNORM" value="117"/>
    <!-- 118-120 reserved -->
    <value name="RGBA2 SNORM" value="121"/>
    <value name="RGBA4 SNORM" value="122"/>
    <value name="RGBA8 SNORM" value="123"/>
    <value name="RGBA16 SNORM" value="124"/>
    <value name="RGBA32 SNORM" value="125"/>
    <!-- 126-130 reserved -->
    <value name="R8UI" value="131"/>
    <value name="R16UI" value="132"/>
    <value name="R32UI" value="133"/>
    <!-- 134-137 reserved -->
    <value name="RG4UI" value="138"/>
    <value name="RG8UI" value="139"/>
    <value name="RG16UI" value="140"/>
    <value name="RG32UI" value="141"/>
    <!-- 142-146 reserved -->
    <value name="RGB8UI" value="147"/>
    <value name="RGB16UI" value="148"/>
    <value name="RGB32UI" value="149"/>
    <!-- 150-152 reserved -->
    <value name="RGBA2UI" value="153"/>
    <value name="RGBA4UI" value="154"/>
    <value name="RGBA8UI" value="155"/>
    <value name="RGBA16UI" value="156"/>
    <value name="RGBA32UI" value="157"/>
    <!-- 158-162 reserved -->
    <value name="R8 UNORM" value="163"/>
    <value name="R16 UNORM" value="164"/>
    <value name="R32 UNORM" value="165"/>
    <!-- 166 reserved -->
    <value name="R32F" value="167"/>
    <!-- 168-169 reserved -->
    <value name="RG4 UNORM" value="170"/>
    <value name="RG8 UNORM" value="171"/>
    <value name="RG16 UNORM" value="172"/>
    <value name="RG32 UNORM" value="173"/>
    <!-- 174 reserved -->
    <value name="RG32F" value="175"/>
    <!-- 176-178 reserved -->
    <value name="RGB8 UNORM" value="179"/>
    <value name="RGB16 UNORM" value="180"/>
    <value name="RGB32 UNORM" value="181"/>
    <!-- 182 reserved -->
    <value name="RGB32F" value="183"/>
    <!-- 184 reserved -->
    <value name="RGBA2 UNORM" value="185"/>
    <value name="RGBA4 UNORM" value="186"/>
    <value name="RGBA8 UNORM" value="187"/>
    <value name="RGBA16 UNORM" value="188"/>
    <value name="RGBA32 UNORM" value="189"/>
    <!-- 190 reserved -->
    <value name="RGBA32F" value="191"/>
    <!-- 192-194 reserved -->
    <value name="R8I" value="195"/>
    <value name="R16I" value="196"/>
    <value name="R32I" value="197"/>
    <!-- 198 reserved -->
    <value name="R16F" value="199"/>
    <!-- 200-201 reserved -->
    <value name="RG4I" value="202"/>
    <value name="RG8I" value="203"/>
    <value name="RG16I" value="204"/>
    <value name="RG32I" value="205"/>
    <!-- 206 reserved -->
    <value name="RG16F" value="207"/>
    <!-- 208-210 reserved -->
    <value name="RGB8I" value="211"/>
    <value name="RGB16I" value="212"/>
    <value name="RGB32I" value="213"/>
    <!-- 214 reserved -->
    <value name="RGB16F" value="215"/>
    <!-- 216 reserved -->
    <value name="RGBA2I" value="217"/>
    <value name="RGBA4I" value="218"/>
    <value name="RGBA8I" value="219"/>
    <value name="RGBA16I" value="220"/>
    <value name="RGBA32I" value="221"/>
    <!-- 222 reserved -->
    <value name="RGBA16F" value="223"/>
    <value name="RGB5 A1 AU" value="224"/>
    <value name="RGB5 A1 PU" value="225"/>
    <value name="R5G6B5 AU" value="226"/>
    <value name="R5G6B5 PU" value="227"/>
    <!-- 228-229 reserved -->
    <value name="Snap4 V" value="230"/>
    <value name="R32F RTZ" value="231"/>
    <value name="RGBA4 AU" value="232"/>
    <value name="RGBA4 PU" value="233"/>
    <!-- 234-236 reserved -->
    <value name="RGBA8 TB" value="237"/>
    <value name="RGB10 A2 TB" value="238"/>
    <value name="RG32F RTZ" value="239"/>
    <value name="Tess Vertex Pack" value="240"/>
    <value name="RGB8 A2 AU" value="241"/>
    <value name="RGB8 A2 PU" value="242"/>
    <!-- 243-246 reserved -->
    <value name="RGB32F RTZ" value="247"/>
    <!-- 248-254 reserved -->
    <value name="RGBA32F RTZ" value="255"/>
  </enum>

  <enum name="RGB Component Order">
    <value name="RGBA" value="0"/>
    <value name="GRBA" value="2"/>
    <value name="BGRA" value="4"/>
    <value name="ARGB" value="8"/>
    <value name="AGRB" value="10"/>
    <value name="ABGR" value="12"/>
    <value name="RGB1" value="16"/>
    <value name="GRB1" value="18"/>
    <value name="BGR1" value="20"/>
    <value name="1RGB" value="24"/>
    <value name="1GRB" value="26"/>
    <value name="1BGR" value="28"/>
    <value name="RRRR" value="226"/>
    <value name="RRR1" value="227"/>
    <value name="RRRA" value="228"/>
    <value name="000A" value="229"/>
    <value name="0001" value="230"/>
    <value name="0000" value="231"/>
    <value name="Snap4 v9" value="232"/>
    <value name="Snap4 v10" value="233"/>
    <value name="Snap4 v11" value="234"/>
    <value name="Snap4 v12" value="235"/>
    <value name="Snap4 v13" value="236"/>
    <value name="Snap4 v14" value="237"/>
    <value name="Snap4 v15" value="238"/>
    <value name="Snap4 v16" value="239"/>
    <!-- Internal only, do not use -->
    <value name="R000" value="240"/>
    <value name="RBGA" value="242"/>
  </enum>

  <enum name="YUV Swizzle">
    <value name="YUVA" value="0"/>
    <value name="YVUA" value="1"/>
    <value name="UYVA" value="2"/>
    <value name="UVYA" value="3"/>
    <value name="VUYA" value="4"/>
    <value name="VYUA" value="5"/>
    <value name="Y00A" value="6"/>
    <value name="YXXA" value="7"/>
  </enum>

  <enum name="YUV Conversion Mode">
    <value name="No Conversion" value="0"/>
    <value name="BT 601" value="3"/>
    <value name="BT 709" value="4"/>
    <value name="Unk" value="5"/>
    <value name="BT 2020" value="6"/>
  </enum>

  <enum name="YUV Cr Siting">
    <value name="Co-Sited" value="0"/>
    <value name="Center Y" value="1"/>
    <value name="Center X" value="2"/>
    <value name="Center" value="3"/>
    <value name="One Quarter" value="4"/>
    <value name="Three Quarters" value="5"/>
    <value name="Replicated" value="7"/>
  </enum>

  <enum name="ASTC 2D Dimension">
    <value name="4" value="0"/>
    <value name="5" value="1"/>
    <value name="6" value="2"/>
    <value name="8" value="4"/>
    <value name="10" value="6"/>
    <value name="12" value="7"/>
  </enum>

  <enum name="ASTC 3D Dimension">
    <value name="4" value="0"/>
    <value name="5" value="1"/>
    <value name="6" value="2"/>
    <value name="3" value="3"/>
  </enum>

  <enum name="Pixel Kill">
    <value name="Force Early" value="0"/>
    <value name="Strong Early" value="1"/>
    <value name="Weak Early" value="2"/>
    <value name="Force Late" value="3"/>
  </enum>

  <enum name="Block Format">
    <value name="Give me a GPU hang" value="0"/>
    <!-- 16x16 block u-interleaved -->
    <value name="Tiled U-Interleaved" value="1"/>
    <value name="Linear" value="2"/>
    <value name="Also Tiled" value="8"/>
    <value name="AFBC" value="12"/>
    <!-- This seems to actually use a newer AFBC version -->
    <value name="AFBC Tiled" value="13"/>
  </enum>

  <enum name="Mipmap Mode">
    <value name="Nearest" value="0"/>
    <value name="None" value="1"/>
    <value name="Trilinear" value="3"/>
  </enum>

  <enum name="LOD Algorithm">
    <value name="Isotropic" value="0"/>
      <!--- 1, 2 reserved -->
    <value name="Anisotropic" value="3"/>
  </enum>

  <enum name="MSAA">
    <value name="Single" value="0"/>
    <!-- N samples, 1 surface, resolved -->
    <value name="Average" value="1"/>
    <!-- N samples, 1 surface, unresolved -->
    <value name="Multiple" value="2"/>
    <!-- N samples, N surfaces -->
    <value name="Layered" value="3"/>
  </enum>

  <enum name="Index Type">
    <value name="None" value="0"/>
    <value name="UINT8" value="1"/>
    <value name="UINT16" value="2"/>
    <value name="UINT32" value="3"/>
  </enum>

  <enum name="Occlusion Mode">
    <value name="Disabled" value="0"/>
    <value name="Predicate" value="1"/>
    <value name="Counter" value="3"/>
  </enum>

  <enum name="Stencil Op">
    <value name="Keep" value="0"/>
    <value name="Replace" value="1"/>
    <value name="Zero" value="2"/>
    <value name="Invert" value="3"/>
    <value name="Incr Wrap" value="4"/>
    <value name="Decr Wrap" value="5"/>
    <value name="Incr Sat" value="6"/>
    <value name="Decr Sat" value="7"/>
  </enum>

  <enum name="Texture Dimension">
    <value name="Cube" value="0"/>
    <value name="1D" value="1"/>
    <value name="2D" value="2"/>
    <value name="3D" value="3"/>
  </enum>

  <enum name="Wrap Mode">
    <value name="Repeat" value="8"/>
    <value name="Clamp to Edge" value="9"/>
    <value name="Clamp to Border" value="11"/>
    <value name="Mirrored Repeat" value="12"/>
    <value name="Mirrored Clamp to Edge" value="13"/>
    <value name="Mirrored Clamp to Border" value="15"/>
  </enum>

  <enum name="Tile Render Order">
    <value name="Z Order" value="0"/>
    <value name="Horizontal" value="1"/>
    <value name="Vertical" value="2"/>
    <value name="Reverse horizontal" value="5"/>
    <value name="Reverse vertical" value="6"/>
  </enum>

  <enum name="Task Axis">
    <value name="X" value="0"/>
    <value name="Y" value="1"/>
    <value name="Z" value="2"/>
  </enum>

  <enum name="Attribute Frequency">
    <value name="Vertex" value="0"/>
    <value name="Instance" value="1"/>
  </enum>

  <struct name="Attribute" size="8" align="32">
    <field name="Type" size="4" start="0:0" type="Descriptor Type" default="Attribute"/>
    <field name="Attribute type" size="4" start="0:4" type="Attribute Type"/>
    <field name="Offset enable" size="1" start="8" type="bool"/>
    <field name="Format" size="22" start="0:10" type="Pixel Format"/>
    <field name="Table" size="6" start="1:0" type="uint"/>
    <field name="Frequency" size="2" start="1:6" type="Attribute Frequency"/> <!-- Internally, ID select -->
    <field name="Divisor R" size="5" start="1:24" type="uint"/>
    <field name="Divisor E" size="1" start="1:29" type="uint"/>
    <field name="Offset" size="32" start="2:0" type="int"/>
    <field name="Buffer index" size="32" start="3:0" type="uint"/> 
    <field name="Stride" size="32" start="4:0" type="uint"/>

    <!-- Vertex packet buffer only -->
    <field name="Packet stride" size="16" start="4:0" type="uint" modifier="shr(6)"/>
    <field name="Attribute stride" size="16" start="4:16" type="uint"/>

    <field name="Divisor D" size="32" start="5:0" type="uint"/>
  </struct>

  <struct name="Buffer" size="8" align="32">
    <field name="Type" size="4" start="0:0" type="Descriptor Type" default="Buffer"/>
    <field name="Buffer type" size="4" start="0:4" type="Buffer Type" default="Simple"/>
    <field name="Size" size="32" start="1:0" type="uint"/>
    <field name="Address" size="64" start="2:0" type="address"/>

    <!-- Structured buffer only -->
    <field name="Stride" size="32" start="4:0" type="uint"/>

    <!-- Vertex packet buffer only -->
    <field name="Packet stride" size="16" start="4:0" type="uint" modifier="shr(6)"/>
    <field name="Attribute stride" size="16" start="4:16" type="uint"/>

  </struct>

  <enum name="Blend Operand A">
    <value name="Zero" value="1"/>
    <value name="Src" value="2"/>
    <value name="Dest" value="3"/>
  </enum>

  <enum name="Blend Operand B">
    <value name="Src Minus Dest" value="0"/>
    <value name="Src Plus Dest" value="1"/>
    <value name="Src" value="2"/>
    <value name="Dest" value="3"/>
  </enum>

  <enum name="Blend Operand C">
    <value name="Zero" value="1"/>
    <value name="Src" value="2"/>
    <value name="Dest" value="3"/>
    <value name="Src x 2" value="4"/>
    <value name="Src Alpha" value="5"/>
    <value name="Dest Alpha" value="6"/>
    <value name="Constant" value="7"/>
  </enum>

  <struct name="Blend Function" layout="none">
    <!-- Blend equation: A + (B * C) -->
    <field name="A" size="2" start="0" type="Blend Operand A"/>
    <field name="Negate A" size="1" start="3" type="bool"/>
    <field name="B" size="2" start="4" type="Blend Operand B"/>
    <field name="Negate B" size="1" start="7" type="bool"/>
    <field name="C" size="3" start="8" type="Blend Operand C"/>
    <field name="Invert C" size="1" start="11" type="bool"/>
  </struct>

  <struct name="Blend Equation" size="1">
    <field name="RGB" size="12" start="0:0" type="Blend Function"/>
    <field name="Alpha" size="12" start="0:12" type="Blend Function"/>
    <field name="Color Mask" size="4" start="0:28" type="uint"/>
  </struct>

  <enum name="Register File Format">
    <value name="F16" value="0"/>
    <value name="F32" value="1"/>
    <value name="I32" value="2"/>
    <value name="U32" value="3"/>
    <value name="I16" value="4"/>
    <value name="U16" value="5"/>
  </enum>

  <enum name="Blend Mode">
    <value name="Shader" value="0"/>
    <value name="Opaque" value="1"/>
    <value name="Fixed-Function" value="2"/>
    <value name="Off" value="3"/>
  </enum>

  <struct name="Blend Shader" size="2">
    <field name="PC" size="28" start="1:4" type="uint" modifier="shr(4)"/>
  </struct>

  <struct name="Internal Conversion" size="1" align="4">
    <field name="Memory Format" size="22" start="0" type="Pixel Format"/>
    <field name="Raw" size="1" start="22" type="bool"/>
    <field name="Register Format" size="3" start="24" type="Register File Format"/>
  </struct>

  <struct name="Blend Fixed-Function" size="2">
    <field name="Num Comps" size="2" start="0:3" type="uint" modifier="minus(1)" default="1"/>
    <field name="RT" size="4" start="0:16" type="uint">
       <value name="MALI_BIFROST_BLEND_MAX_RT" value="8"/>
    </field>
    <field name="Conversion" size="32" start="1:0" type="Internal Conversion"/>
  </struct>

  <struct name="Internal Blend" align="8">
    <field name="Mode" size="2" start="0:0" type="Blend Mode"/>
    <field name="Shader" size="64" start="0:0" type="Blend Shader"/>
    <field name="Fixed-Function" size="64" start="0:0" type="Blend Fixed-Function"/>
  </struct>

  <struct name="Blend" size="4" align="16">
    <field name="Load Destination" size="1" start="0:0" type="bool" default="false"/>
    <field name="Alpha To One" size="1" start="0:8" type="bool"/>
    <field name="Enable" size="1" start="0:9" type="bool" default="true"/>
    <field name="sRGB" size="1" start="0:10" type="bool" default="false"/>
    <field name="Round to FB precision" size="1" start="0:11" type="bool" default="false"/>
    <field name="Constant" size="16" start="0:16" type="uint"/>
    <field name="Equation" size="32" start="1:0" type="Blend Equation"/>
    <field name="Internal" size="64" start="2:0" type="Internal Blend"/>
  </struct>

  <enum name="Point Size Array Format">
    <value name="None" value="0"/>
    <value name="FP16" value="2"/>
    <value name="FP32" value="3"/>
  </enum>

  <struct name="Tiler launch" layout="ins" op="5">
  </struct>

  <struct name="IDVS launch" layout="ins" op="6">
    <!-- The low 32 bits are all ORd with register w38 -->
    <field name="Draw mode" size="8" start="0" type="Draw Mode" default="None"/>
    <field name="Index type" size="3" start="8" type="Index Type" default="None"/>
    <field name="Secondary Shader" size="1" start="18" type="bool"/>
    <field name="Unk" size="16" start="32" type="register" default="0x4a42"/>
  </struct>

  <struct name="Primitive" layout="cs">
    <field name="Index count" size="32" start="0x21:0" type="uint"/>
    <field name="Base vertex offset" size="32" start="0x24:0" type="uint"/>
    <field name="Instance offset" size="32" start="0x25:0" type="uint"/>

    <!-- These bits can also be set from the IDVS launch instruction...
         they are combined with a bitwise OR. -->
    <field name="Draw mode" size="8" start="0x38:0" type="Draw Mode" default="None"/>
    <field name="Index type" size="3" start="0x38:8" type="Index Type" default="None"/>
    <field name="Point size array format" size="2" start="0x38:11" type="Point Size Array Format"/>
    <field name="Primitive Index Enable" size="1" start="0x38:13" type="bool"/>
    <field name="Primitive Index Writeback" size="1" start="0x38:14" type="bool"/>
    <field name="Allow rotating primitives" size="1" start="0x38:15" type="bool" default="true"/>
    <field name="Low Depth Cull" size="1" start="0x38:16" type="bool"/>
    <field name="High Depth Cull" size="1" start="0x38:17" type="bool"/>
    <field name="Secondary Shader" size="1" start="0x38:18" type="bool"/>
    <field name="Primitive restart" size="1" start="0x38:19" type="bool"/>
    <!-- Set to 2 when writing point size, 1 otherwise. 0 appears to be fine in any case. -->
    <field name="Unk" size="2" start="0x38:22" type="uint"/>

    <!-- These are likely in 0x38, but bit positions have not been verified -->
    <field name="Layer index enable" size="1" start="0:20" type="bool"/>
    <field name="Scissor array enable" size="1" start="0:21" type="bool"/>
  </struct>

  <struct name="Sampler" size="8" align="32">
    <field name="Type" size="4" start="0:0" type="Descriptor Type" default="Sampler"/>
    <field name="Wrap Mode R" size="4" start="0:8" type="Wrap Mode" default="Clamp to Edge"/>
    <field name="Wrap Mode T" size="4" start="0:12" type="Wrap Mode" default="Clamp to Edge"/>
    <field name="Wrap Mode S" size="4" start="0:16" type="Wrap Mode" default="Clamp to Edge"/>
    <field name="Round to nearest even" size="1" start="0:21" type="bool" default="false"/>
    <!--- Disable sRGB-to-linear conversion (assume linear) -->
    <field name="sRGB override" size="1" start="0:22" type="bool" default="false"/>
    <field name="Seamless Cube Map" size="1" start="0:23" type="bool" default="true"/>
    <field name="Clamp integer coordinates" size="1" start="0:24" type="bool"/>
    <field name="Normalized Coordinates" size="1" start="0:25" type="bool" default="true"/>
    <field name="Clamp integer array indices" size="1" start="0:26" type="bool" default="true"/>
    <field name="Minify nearest" size="1" start="0:27" type="bool" default="false"/>
    <field name="Magnify nearest" size="1" start="0:28" type="bool" default="false"/>
    <!--- Set for 0.5, clear for 0.0 -->
    <field name="Magnify cutoff" size="1" start="0:29" type="bool" default="false"/>
    <field name="Mipmap Mode" size="2" start="0:30" type="Mipmap Mode" default="Nearest"/>
    <field name="Minimum LOD" size="13" start="1:0" type="uint" default="0"/>
    <field name="Compare Function" size="3" start="1:13" type="Func" default="Never"/>
    <field name="Maximum LOD" size="13" start="1:16" type="uint" default="0"/>
    <field name="LOD bias" size="16" start="2:0" type="int" default="0"/>
    <field name="Maximum anisotropy" size="5" start="2:16" type="uint" default="1" modifier="minus(1)"/>
    <field name="LOD algorithm" size="2" start="2:24" type="LOD Algorithm" default="Isotropic"/>
    <field name="Border Color R" size="32" start="4:0" type="uint/float" default="0.0"/>
    <field name="Border Color G" size="32" start="5:0" type="uint/float" default="0.0"/>
    <field name="Border Color B" size="32" start="6:0" type="uint/float" default="0.0"/>
    <field name="Border Color A" size="32" start="7:0" type="uint/float" default="0.0"/>
  </struct>

  <enum name="Plane Type">
    <value name="Null" value="0"/>
    <value name="Generic" value="1"/>
    <value name="ASTC 2D" value="4"/>
    <value name="ASTC 3D" value="5"/>
    <value name="AFBC" value="6"/>
    <value name="Chroma 2p" value="8"/>
  </enum>

  <enum name="Clump Ordering">
    <value name="Tiled U-Interleaved" value="1"/>
    <value name="Linear" value="2"/>
  </enum>

  <enum name="Clump Format">
    <value name="RAW8" value="0"/>
    <value name="RAW16" value="1"/>
    <value name="RAW32" value="2"/>
    <value name="RAW64" value="3"/>
    <value name="RAW128" value="4"/>

    <value name="RAW24" value="8"/>
    <value name="RAW48" value="9"/>
    <value name="RAW96" value="10"/>

    <value name="D32X32" value="16"/>
    <value name="X32D32" value="17"/>
    <value name="X32S8X24" value="18"/>
    <value name="X24S8X32" value="19"/>
    <value name="X24S8" value="20"/>
    <value name="S8X24" value="21"/>
    <value name="S8" value="22"/>

    <value name="L4A4" value="24"/>
    <value name="L8A8" value="25"/>
    <value name="A8" value="26"/>

    <value name="ETC2 RGB8" value="32"/>
    <value name="ETC2 R11 UNORM" value="33"/>
    <value name="ETC2 R11 SNORM" value="34"/>
    <value name="ETC2 RG11 UNORM" value="35"/>
    <value name="ETC2 RG11 SNORM" value="36"/>
    <value name="ETC2 RGBA8" value="37"/>
    <value name="ETC2 RGB8A1" value="38"/>

    <value name="BC1 UNORM" value="48"/>
    <value name="BC2 UNORM" value="49"/>
    <value name="BC3 UNORM" value="50"/>
    <value name="BC4 UNORM" value="51"/>
    <value name="BC4 SNORM" value="52"/>
    <value name="BC5 UNORM" value="53"/>
    <value name="BC5 SNORM" value="54"/>
    <value name="BC6H UF16" value="55"/>
    <value name="BC6H SF16" value="56"/>
    <value name="BC7 UNORM" value="57"/>

    <value name="Y8 UV8 422" value="64"/>
    <value name="Y10 UV10 422" value="65"/>
    <value name="Y16 UV16 422" value="67"/>

    <value name="Y8 UV8 420" value="72"/>
    <value name="Y10 UV10 420" value="73"/>
    <value name="Y16 UV16 420" value="75"/>
    <value name="YUV420 10x6" value="76"/>

    <value name="RAW10" value="120"/>
    <value name="RAW12" value="121"/>

    <value name="R8G8B8G8" value="124"/>
    <value name="G8R8G8B8" value="125"/>
  </enum>

  <enum name="AFBC Superblock Size">
    <value name="16x16" value="0"/>
    <value name="32x8" value="1"/>
    <value name="64x4" value="2"/>
  </enum>

  <enum name="AFBC Compression Mode">
    <value name="R8" value="0"/>
    <value name="R8G8 alt" value="1"/>
    <value name="R8G8" value="3"/>
    <value name="R5G6B5" value="4"/>
    <value name="R4G4B4A4" value="5"/>
    <value name="R5G5B5A1" value="6"/>
    <value name="R8G8B8A8 alt" value="8"/>
    <value name="R8G8B8" value="9"/>
    <value name="R8G8B8A8" value="10"/>
    <value name="R10G10B10A2" value="11"/>
    <value name="R11G11B10" value="12"/>
    <value name="S8" value="14"/>
    <value name="X24S8" value="15"/>

    <!-- Subsampled maybe? -->
    <value name="Unk 1" value="16"/>
    <value name="Unk 2" value="17"/>

    <value name="YUV420 6c8" value="32"/>
    <value name="YUV420 2c8" value="34"/>
    <value name="YUV420 1c8" value="35"/>

    <value name="YUV422 4c8" value="37"/>
    <value name="YUV422 2c8" value="38"/>
    <value name="YUV422 1c8" value="39"/>

    <value name="YUV420 6c10" value="40"/>
    <value name="YUV420 2c10" value="42"/>
    <value name="YUV420 1c10" value="43"/>

    <value name="YUV422 4c10" value="45"/>
    <value name="YUV422 2c10" value="46"/>
    <value name="YUV422 1c10" value="47"/>
  </enum>

  <struct name="Plane AFBC Overlay" size="8">
    <field name="Superblock size" size="3" start="0:8" type="AFBC Superblock Size"/>

    <field name="YTR" size="1" start="0:16" type="bool"/>
    <field name="Split block" size="1" start="0:17" type="bool"/>
    <field name="Alpha hint" size="1" start="0:18" type="bool"/>
    <field name="Tiled header" size="1" start="0:19" type="bool"/>
    <field name="Prefetch" size="1" start="0:20" type="bool"/>
    <field name="Compression mode" size="6" start="0:26" type="AFBC Compression Mode"/>

    <field name="Header stride" size="32" start="5:0" type="uint"/>
  </struct>

  <struct name="Plane ASTC 2D Overlay" size="8">
    <field name="Block width" size="3" start="26" type="ASTC 2D Dimension"/>
    <field name="Block height" size="3" start="29" type="ASTC 2D Dimension"/>
  </struct>

  <struct name="Plane ASTC 3D Overlay" size="8">
    <field name="Block width" size="2" start="26" type="ASTC 3D Dimension"/>
    <field name="Block height" size="2" start="28" type="ASTC 3D Dimension"/>
    <field name="Block depth" size="2" start="30" type="ASTC 3D Dimension"/>
  </struct>

  <struct name="Plane ASTC Overlay" size="8">
    <field name="Decode HDR" size="1" start="24" type="bool"/>
    <field name="Decode Wide" size="1" start="25" type="bool"/>

    <field name="2D" size="32" start="0" type="Plane ASTC 2D Overlay"/>
    <field name="3D" size="32" start="0" type="Plane ASTC 3D Overlay"/>
  </struct>

  <struct name="Plane" size="8" align="32">
    <field name="Type" size="4" start="0:0" type="Descriptor Type" default="Plane"/>
    <field name="Plane type" size="4" start="0:4" type="Plane Type"/>

    <field name="AFBC" size="32" start="0:0" type="Plane AFBC Overlay"/>
    <field name="ASTC" size="32" start="0:0" type="Plane ASTC Overlay"/>

    <!-- Not AFBC -->
    <field name="Clump ordering" size="4" start="0:8" type="Clump Ordering"/>

    <!-- Generic, Chroma 2p -->
    <field name="Clump format" size="8" start="24" type="Clump Format"/>

    <field name="Size" size="32" start="1:0" type="uint"/>
    <field name="Pointer" size="64" start="2:0" type="address"/>
    <field name="Row stride" size="32" start="4:0" type="uint"/>
    <field name="Slice stride" size="32" start="6:0" type="int"/>
  </struct>

  <struct name="Texture" size="8" align="32">
    <field name="Type" size="4" start="0:0" type="Descriptor Type" default="Texture"/>
    <field name="Dimension" size="2" start="0:4" type="Texture Dimension"/>
    <field name="Sample corner position" size="1" start="0:8" type="bool" default="false"/>
    <field name="Normalize coordinates" size="1" start="0:9" type="bool" default="false"/>
    <field name="Format" size="22" start="0:10" type="Pixel Format"/>
    <field name="Width" size="16" start="1:0" type="uint" modifier="minus(1)"/>
    <field name="Height" size="16" start="1:16" type="uint" modifier="minus(1)"/>
    <field name="Swizzle" size="12" start="2:0" type="uint"/>
    <field name="Texel interleave" size="1" start="2:12" type="bool"/>
    <field name="Levels" size="5" start="2:16" type="uint" default="1" modifier="minus(1)"/>
    <field name="Minimum level" size="5" start="2:24" type="uint"/>
    <field name="Minimum LOD" size="13" start="3:0" type="uint" default="0"/>
    <field name="Sample count" size="3" start="3:13" type="uint" default="1" modifier="log2"/>
    <field name="Maximum LOD" size="13" start="3:16" type="uint" default="0"/>
    <field name="Surfaces" size="64" start="4:0" type="address"/>
    <field name="Array size" size="16" start="6:0" type="uint" modifier="minus(1)" default="1"/>
    <field name="Depth" size="16" start="7:0" type="uint" modifier="minus(1)" default="1"/>
  </struct>

  <enum name="Shader Register Allocation">
    <value name="64 Per Thread" value="0"/>
    <value name="32 Per Thread" value="2"/>
  </enum>

  <enum name="Flush to zero mode">
    <value name="Preserve subnormals" value="0"/>
    <value name="DX11" value="1"/>
    <value name="Always" value="2"/>
    <value name="Abrupt" value="3"/>
  </enum>

  <struct name="Preload" size="1">
    <field name="R48-R63" size="16" start="0:0" type="hex"/>
    <field name="R55" size="1" start="0:7" type="bool"/>
    <field name="R56" size="1" start="0:8" type="bool"/>
    <field name="R57" size="1" start="0:9" type="bool"/>
    <field name="R58" size="1" start="0:10" type="bool"/>
    <field name="R59" size="1" start="0:11" type="bool"/>
    <field name="R60" size="1" start="0:12" type="bool"/>
    <field name="R61" size="1" start="0:13" type="bool"/>
    <field name="R62" size="1" start="0:14" type="bool"/>
    <field name="R63" size="1" start="0:15" type="bool"/>
  </struct>

  <struct name="Shader Program" size="8" align="32">
    <field name="Type" size="4" start="0:0" type="Descriptor Type" default="Shader"/>
    <field name="Stage" size="4" start="0:4" type="Shader stage"/>
    <field name="Primary shader" size="1" start="0:8" type="bool"/>
    <field name="Suppress NaN" size="1" start="0:16" type="bool"/>
    <field name="Flush to zero mode" size="2" start="0:17" type="Flush to zero mode"/>
    <field name="Suppress Inf" size="1" start="0:19" type="bool"/>
    <field name="Requires helper threads" size="1" start="0:28" type="bool"/> <!-- Fragment only -->
    <field name="Shader contains JUMP_EX" size="1" start="0:29" type="bool"/>
    <field name="Register allocation" size="2" start="0:30" type="Shader Register Allocation"/>
    <field name="Preload" size="16" start="1:0" type="Preload"/>
    <field name="Binary" size="64" start="2:0" type="address"/>
  </struct>

  <struct name="Scissor" layout="cs">
    <field name="Scissor Minimum X" size="16" start="0x2a:0" type="uint"/>
    <field name="Scissor Minimum Y" size="16" start="0x2a:16" type="uint"/>
    <field name="Scissor Maximum X" size="16" start="0x2b:0" type="uint"/>
    <field name="Scissor Maximum Y" size="16" start="0x2b:16" type="uint"/>
  </struct>

  <struct name="Local Storage" size="8" align="64">
    <field name="TLS Size" size="5" start="0:0" type="uint"/>
    <field name="WLS Instances" size="5" start="1:0" type="uint" modifier="log2" prefix="MALI_LOCAL_STORAGE" default="MALI_LOCAL_STORAGE_NO_WORKGROUP_MEM">
      <value name="No Workgroup Mem" value="0x80000000"/>
    </field>
    <field name="WLS Size Base" size="2" start="1:5" type="uint"/>
    <field name="WLS Size Scale" size="5" start="1:8" type="uint"/>
    <field name="TLS Base Pointer" size="48" start="2:0" type="address"/>
    <field name="TLS Address Mode" size="4" start="3:28" type="Address Mode"/>
    <field name="WLS Base Pointer" size="64" start="4:0" type="address"/>
  </struct>

  <enum name="Color Buffer Internal Format">
    <value name="Raw Value" value="0"/>
    <value name="R8G8B8A8" value="1"/>
    <value name="R10G10B10A2" value="2"/>
    <value name="R8G8B8A2" value="3"/>
    <value name="R4G4B4A4" value="4"/>
    <value name="R5G6B5A0" value="5"/>
    <value name="R5G5B5A1" value="6"/>
    <value name="RAW8" value="32"/>
    <value name="RAW16" value="33"/>
    <value name="RAW32" value="34"/>
    <value name="RAW64" value="35"/>
    <value name="RAW128" value="36"/>
  </enum>

  <enum name="Color Format">
    <value name="RAW8" value="0"/>
    <value name="RAW16" value="1"/>
    <value name="RAW24" value="2"/>
    <value name="RAW32" value="3"/>
    <value name="RAW48" value="4"/>
    <value name="RAW64" value="5"/>
    <value name="RAW96" value="6"/>
    <value name="RAW128" value="7"/>
    <value name="RAW192" value="8"/>
    <value name="RAW256" value="9"/>
    <value name="RAW384" value="10"/>
    <value name="RAW512" value="11"/>
    <value name="RAW768" value="12"/>
    <value name="RAW1024" value="13"/>
    <value name="RAW1536" value="14"/>
    <value name="RAW2048" value="15"/>
    <value name="R8" value="16"/>
    <value name="R8G8" value="17"/>
    <value name="R8G8B8" value="18"/>
    <value name="R8G8B8A8" value="19"/>
    <value name="R4G4B4A4" value="20"/>
    <value name="R5G6B5" value="21"/>
    <value name="R8G8B8_FROM_R8G8B8A2" value="22"/>
    <value name="R10G10B10A2" value="24"/>
    <value name="A2B10G10R10" value="25"/>
    <value name="R5G5B5A1" value="28"/>
    <value name="A1B5G5R5" value="29"/>
    <value name="NATIVE" value="31"/>
  </enum>

  <enum name="Downsampling Accumulation Mode">
    <value name="Unsigned normalized integer" value="0"/>
    <value name="Signed normalized integer" value="1"/>
  </enum>

  <enum name="Sample Layout">
    <value name="Ordered 4x Grid" value="0"/>
    <value name="Rotated 4x Grid" value="1"/>
    <value name="D3D 8x Grid" value="2"/>
    <value name="D3D 16x Grid" value="3"/>
  </enum>

  <enum name="ZS Format">
    <value name="D16" value="1"/>
    <value name="D24" value="2"/>
    <value name="D24X8" value="4"/>
    <value name="D24S8" value="5"/>
    <value name="D32" value="14"/>
  </enum>

  <enum name="ZS Preload Format">
    <value name="D32_S8X24" value="4"/>
  </enum>

  <enum name="S Format">
    <value name="S8" value="1"/>
    <value name="X24S8" value="4"/>
  </enum>

  <enum name="Tie-Break Rule">
    <value name="0_IN_180_OUT" value="0"/>
    <value name="0_OUT_180_IN" value="1"/>
    <value name="MINUS_180_IN_0_OUT" value="2"/>
    <value name="MINUS_180_OUT_0_IN" value="3"/>
    <value name="90_IN_270_OUT" value="4"/>
    <value name="90_OUT_270_IN" value="5"/>
    <value name="MINUS_90_IN_90_OUT" value="6"/>
    <value name="MINUS_90_OUT_90_IN" value="7"/>
  </enum>

  <struct name="RT Buffer">
    <field name="Base" size="64" start="0:0" type="address"/>
    <field name="Row Stride" size="32" start="2:0" type="uint"/>
    <field name="Surface Stride" size="32" start="3:0" type="uint"/>
  </struct>

  <enum name="Sample Pattern">
    <value name="Single-sampled" value="0"/>
    <value name="Ordered 4x Grid" value="1"/>
    <value name="Rotated 4x Grid" value="2"/>
    <value name="D3D 8x Grid" value="3"/>
    <value name="D3D 16x Grid" value="4"/>
  </enum>

  <enum name="Z Internal Format">
    <value name="D16" value="0"/>
    <value name="D24" value="1"/>
    <value name="D32" value="2"/>
  </enum>

  <enum name="FBD Tag">
    <value name="IS_MFBD" value="1"/>
    <value name="HAS_ZS_RT" value="2"/>
    <value name="MASK" value="63"/>
  </enum>

  <enum name="Pre Post Frame Shader Mode">
    <value name="Never" value="0"/>
    <value name="Always" value="1"/>
    <value name="Intersect" value="2"/>
    <value name="Early ZS always" value="3"/>
  </enum>

  <enum name="Downscale">
    <value name="None" value="0"/>
    <value name="2x" value="1"/>
    <value name="4x" value="2"/>
  </enum>

  <struct name="Framebuffer Parameters" align="64">
    <field name="Pre Frame 0" size="3" start="0:0" type="Pre Post Frame Shader Mode"/>
    <field name="Pre Frame 1" size="3" start="0:3" type="Pre Post Frame Shader Mode"/>
    <field name="Post Frame" size="3" start="0:6" type="Pre Post Frame Shader Mode"/>
    <field name="Downscale geometry" size="2" start="0:9" type="Downscale"/>
    <field name="Internal layer index" size="8" start="0:24" type="uint"/>
    <field name="Frame argument" size="64" start="2:0" type="hex"/>
    <field name="Sample Locations" size="64" start="4:0" type="address"/>
    <field name="Frame Shader DCDs" size="64" start="6:0" type="address"/>
    <field name="Width" size="16" start="8:0" type="uint" modifier="minus(1)"/>
    <field name="Height" size="16" start="8:16" type="uint" modifier="minus(1)"/>
    <field name="Bound Min X" size="16" start="9:0" type="uint"/>
    <field name="Bound Min Y" size="16" start="9:16" type="uint"/>
    <field name="Bound Max X" size="16" start="10:0" type="uint"/>
    <field name="Bound Max Y" size="16" start="10:16" type="uint"/>
    <field name="Sample Count" size="3" start="11:0" type="uint" default="1" modifier="log2"/>
    <field name="Sample Pattern" size="3" start="11:3" type="Sample Pattern"/>
    <field name="Tie-Break Rule" size="3" start="11:6" type="Tie-Break Rule"/>
    <field name="Effective Tile Size" size="4" start="11:9" type="uint" modifier="log2"/>
    <field name="First provoking vertex" size="1" start="11:14" type="bool"/>
    <field name="Point sprite coord origin max Y" size="1" start="11:15" type="bool" default="true"/>
    <field name="Blend suppress Inf" size="1" start="11:16" type="bool"/>
    <field name="Blend suppress NaN" size="1" start="11:17" type="bool"/>
    <field name="Blend suppress denorm" size="1" start="11:18" type="bool"/>
    <field name="Render Target Count" size="4" start="11:19" type="uint" modifier="minus(1)"/>
    <field name="Color Buffer Allocation" size="8" start="11:24" type="uint" modifier="shr(10)"/>
    <field name="S Clear" size="8" start="12:0" type="uint"/>
    <field name="S Write Enable" size="1" start="12:8" type="bool"/>
    <field name="S Preload Enable" size="1" start="12:9" type="bool"/>
    <field name="S Unload Enable" size="1" start="12:10" type="bool"/>
    <field name="Z Internal Format" size="2" start="12:16" type="Z Internal Format"/>
    <field name="Z Write Enable" size="1" start="12:18" type="bool"/>
    <field name="Z Preload Enable" size="1" start="12:19" type="bool"/>
    <field name="Z Unload Enable" size="1" start="12:20" type="bool"/>
    <field name="Has ZS CRC Extension" size="1" start="12:21" type="bool"/>
    <field name="Empty Tile Read Enable" size="1" start="12:28" type="bool"/>
    <field name="Empty Tile Write Enable" size="1" start="12:29" type="bool"/>
    <field name="CRC Read Enable" size="1" start="12:30" type="bool"/>
    <field name="CRC Write Enable" size="1" start="12:31" type="bool"/>
    <field name="Z Clear" size="32" start="13:0" type="float"/>
    <field name="Tiler" size="64" start="14:0" type="address"/>
  </struct>

  <struct name="ZS CRC Extension" align="64" size="16">
    <field name="ZS Write Format" size="4" start="0:0" type="ZS Format"/>
    <field name="ZS Block Format" size="4" start="0:4" type="Block Format"/>
    <field name="ZS MSAA" size="2" start="0:8" default="Single" type="MSAA"/>
    <field name="CRC Render Target" size="4" start="0:13" type="uint"/>
    <field name="S Write Format" size="4" start="0:16" type="S Format"/>
    <field name="S Block Format" size="4" start="0:20" type="Block Format"/>
    <field name="S MSAA" size="2" start="0:24" default="Single" type="MSAA"/>

    <field name="AFBC Reverse Issue Order" size="1" start="0:30" type="bool"/>
    <!-- Note: Must be set if AFBC is enabled and effective_tile_size is not 16x16 -->
    <field name="ZS Clean Pixel Write Enable" size="1" start="0:31" type="bool"/>

    <field name="CRC Row Stride" size="32" start="1:0" type="uint"/>
    <field name="CRC Unk" size="16" start="2:0" type="hex"/>
    <field name="CRC Clear Color" size="48" start="2:16" type="hex"/>
    <field name="CRC Base" size="64" start="4:0" type="address"/>

    <field name="ZS Writeback Base" size="64" start="8:0" type="address"/>
    <!-- Header clumps per row (different than Bifrost's AFBC line stride) -->
    <field name="ZS Writeback Row Stride" size="32" start="10:0" type="uint"/>
    <field name="ZS Writeback Surface Stride" size="32" start="11:0" type="uint"/>
    <field name="ZS AFBC Body Offset" size="32" start="11:0" type="uint"/>

    <field name="S Writeback Base" size="64" start="12:0" type="address"/>
    <field name="S Writeback Row Stride" size="32" start="14:0" type="uint"/>
    <field name="S Writeback Surface Stride" size="32" start="15:0" type="uint"/>
    <field name="S AFBC Body Offset" size="32" start="15:0" type="uint"/>
  </struct>

  <enum name="YUV Conv K6">
    <value name="0" value="0"/>
    <value name="16" value="1"/>
  </enum>

  <enum name="YUV Conv K7 Clamp">
    <value name="MINUS_128_TO_127" value="0"/>
    <value name="MINUS_112_TO_111" value="1"/>
    <value name="0_TO_255" value="2"/>
    <value name="16_TO_239" value="3"/>
  </enum>

  <enum name="YUV Conv K8">
    <value name="220" value="0"/>
    <value name="256" value="1"/>
  </enum>

  <struct name="Render Target YUV Overlay" size="16">
    <field name="Swizzle" size="3" start="2:16" type="YUV Swizzle"/>
    <field name="Full Range" size="1" start="2:20" type="bool"/>
    <field name="Conversion Mode" size="4" start="2:21" type="YUV Conversion Mode"/>
    <field name="Cr Siting" size="3" start="2:25" type="YUV Cr Siting"/>
    <field name="Unsigned Cr Range" size="1" start="2:28" type="bool"/>
    <!-- TODO: Is planar YUV even supported? Only "Plane 0" appears to
         be used, and the stride gets ignored. -->
    <field name="Plane 0 Base" size="64" start="4:0" type="address"/>
    <field name="Plane 1 Base" size="64" start="6:0" type="address"/>
    <field name="Plane 2 Base" size="64" start="8:0" type="address"/>
    <field name="Plane 0 Stride" size="32" start="10:0" type="uint"/>
    <field name="Plane 1 2 Stride" size="32" start="11:0" type="uint"/>
  </struct>

  <struct name="Render Target AFBC Overlay" size="16">
    <field name="YUV Transform" size="1" start="2:0" type="bool"/>
    <!-- Split each block into two half-height blocks -->
    <field name="Split block" size="1" start="2:1" type="bool"/>
    <field name="Wide block" size="1" start="2:2" type="bool"/>
    <field name="Reverse issue order" size="1" start="2:3" type="bool"/>
    <field name="Front buffer" size="1" start="2:4" type="bool"/>
    <field name="Alpha hint" size="1" start="2:5" type="bool"/>
    <field name="Compression mode" size="6" start="2:10" type="AFBC Compression Mode"/>

    <field name="Header" size="64" start="8:0" type="address"/>
    <field name="Row stride" size="32" start="10:0" type="uint"/>
    <field name="Body offset" size="32" start="11:0" type="uint"/>
  </struct>

  <struct name="RT Clear">
    <field name="Color 0" size="32" start="0:0" type="uint"/>
    <field name="Color 1" size="32" start="1:0" type="uint"/>
    <field name="Color 2" size="32" start="2:0" type="uint"/>
    <field name="Color 3" size="32" start="3:0" type="uint"/>
  </struct>

  <struct name="Render Target" align="64">
    <field name="YUV" size="512" start="0:0" type="Render Target YUV Overlay"/>
    <field name="AFBC" size="512" start="0:0" type="Render Target AFBC Overlay"/>
    <field name="Internal Buffer Offset" size="12" start="0:4" type="uint" modifier="shr(4)"/>
    <field name="YUV Enable" size="1" start="0:24" type="bool"/>
    <field name="Dithered Clear" size="1" start="0:25" type="bool"/>
    <field name="Internal Format" size="6" start="0:26" type="Color Buffer Internal Format"/>
    <field name="Write Enable" size="1" start="1:0" type="bool"/>
    <field name="Writeback Format" size="5" start="1:3" type="Color Format"/>
    <field name="Writeback Block Format" size="4" start="1:8" type="Block Format"/>
    <field name="Writeback MSAA" size="2" start="1:12" type="MSAA"/>
    <field name="sRGB" size="1" start="1:14" type="bool"/>
    <field name="Dithering Enable" size="1" start="1:15" type="bool"/>
    <field name="Swizzle" size="12" start="1:16" type="uint"/>
    <field name="Clean Pixel Write Enable" size="1" start="1:31" type="bool"/>
    <field name="RGB" size="128" start="8:0" type="RT Buffer"/>
    <field name="Clear" size="128" start="12:0" type="RT Clear"/>
  </struct>

  <enum name="Chunk Size">
    <value name="256 KiB" value="0"/>
    <value name="512 KiB" value="1"/>
    <value name="1 MiB" value="2"/>
    <value name="2 MiB" value="3"/>
  </enum>

  <!-- Is this actually correct? Changing it doesn't seem to affect
       heap memory usage at all. Then again, neither does the chunk
       size... perhaps those are both wrong, at least for v10.  -->
  <enum name="Chunk Partition">
    <value name="Dynamic" value="0"/>
    <value name="Static 25%" value="1"/>
    <value name="Static 50%" value="2"/>
    <value name="Static 75%" value="3"/>
  </enum>

  <!-- Actually a buffer descriptor, split out for backwards compatibility.-->
  <struct name="Tiler Heap" align="32">
    <field name="Type" size="4" start="0:0" type="Descriptor Type" default="Buffer"/>
    <field name="Buffer type" size="4" start="0:4" type="Buffer Type" default="Tiler heap"/>
    <field name="Chunk size" size="2" start="0:8" type="Chunk Size" default="256 KiB"/>
    <field name="Partitioning" size="2" start="0:10" type="Chunk Partition" default="Dynamic"/>
    <field name="Size" size="32" start="1:0" type="uint" modifier="align(4096)"/>
    <field name="Base" size="64" start="2:0" type="address"/>
    <field name="Bottom" size="64" start="4:0" type="address"/>
    <field name="Top" size="64" start="6:0" type="address"/>
  </struct>

  <struct name="Tiler Weights" size="8">
    <field name="Weight0" size="16" start="0:16" type="uint"/>
    <field name="Weight1" size="16" start="1:16" type="uint"/>
    <field name="Weight2" size="16" start="2:16" type="uint"/>
    <field name="Weight3" size="16" start="3:16" type="uint"/>
    <field name="Weight4" size="16" start="4:16" type="uint"/>
    <field name="Weight5" size="16" start="5:16" type="uint"/>
    <field name="Weight6" size="16" start="6:16" type="uint"/>
    <field name="Weight7" size="16" start="7:16" type="uint"/>
  </struct>

  <struct name="Tiler State" size="16">
    <field name="Word0" size="32" start="0:0" type="uint"/>
    <field name="Word1" size="32" start="1:0" type="uint"/>
    <field name="Word2" size="32" start="2:0" type="uint"/>
    <field name="Word3" size="32" start="3:0" type="uint"/>
    <field name="Word4" size="32" start="4:0" type="uint"/>
    <field name="Word5" size="32" start="5:0" type="uint"/>
    <field name="Word6" size="32" start="6:0" type="uint"/>
    <field name="Word7" size="32" start="7:0" type="uint"/>
    <field name="Word8" size="32" start="8:0" type="uint"/>
    <field name="Word9" size="32" start="9:0" type="uint"/>
    <field name="Word10" size="32" start="10:0" type="uint"/>
    <field name="Word11" size="32" start="11:0" type="uint"/>
    <field name="Word12" size="32" start="12:0" type="uint"/>
    <field name="Word13" size="32" start="13:0" type="uint"/>
    <field name="Word14" size="32" start="14:0" type="uint"/>
    <field name="Word15" size="32" start="15:0" type="uint"/>
  </struct>

  <struct name="Tiler Context" size="48" align="64">
    <field name="Polygon List" size="64" start="0:0" type="address"/>
    <field name="Hierarchy Mask" size="13" start="2:0" type="uint"/>
    <field name="Sample Pattern" size="3" start="2:13" type="Sample Pattern"/>
    <field name="Update Cost Table" size="1" start="2:16" type="bool"/>
    <field name="Sample test disable" size="1" start="2:17" type="bool"/>
    <field name="First provoking vertex" size="1" start="2:18" type="bool"/>
    <field name="FB Width" size="16" start="3:0" type="uint" modifier="minus(1)"/>
    <field name="FB Height" size="16" start="3:16" type="uint" modifier="minus(1)"/>
    <field name="Layer count" size="8" start="4:0" type="uint" default="1" modifier="minus(1)"/>
    <field name="Layer offset" size="8" start="4:8" type="uint"/>
    <field name="Heap" size="64" start="6:0" type="address"/>
    <!-- The blob places this directly before the heap pointer -->
    <field name="Scratch" size="64" start="8:0" type="address"/>
    <!-- Filled in by hardare, passed to HEAPCLEAR -->
    <field name="Heap Start" size="64" start="10:0" type="address"/>
    <field name="Heap End" size="64" start="12:0" type="address"/>
    <field name="Weights" size="256" start="8:0" type="Tiler Weights"/>
    <field name="State" size="512" start="32:0" type="Tiler State"/>
  </struct>

  <struct name="Framebuffer Padding" size="16">
  </struct>

  <aggregate name="Framebuffer" align="64">
    <section name="Parameters" offset="0" type="Framebuffer Parameters"/>
    <section name="Padding" offset="64" type="Framebuffer Padding"/>
  </aggregate>

  <struct name="Fragment Job Payload" layout="cs">
    <field name="Bound Min X" size="16" start="0x2a:0" type="uint"/>
    <field name="Bound Min Y" size="16" start="0x2a:16" type="uint"/>
    <field name="Bound Max X" size="16" start="0x2b:0" type="uint"/>
    <field name="Bound Max Y" size="16" start="0x2b:16" type="uint"/>
    <field name="Framebuffer" size="48" start="0x28:0" type="address"/>
    <field name="Tile Enable Map" size="48" start="0x2c:0" type="address"/>
    <!-- Must have 64-byte alignment -->
    <field name="Tile Enable Map Row Stride" size="9" start="0x2e:0" type="uint"/>
  </struct>

  <aggregate name="Fragment Job" align="128">
    <section name="Payload" offset="32" type="Fragment Job Payload"/>
  </aggregate>

  <struct name="Fragment launch" layout="ins" op="7">
    <field name="Has Tile Enable Map" size="1" start="0" type="bool"/>
    <field name="Tile render order" size="3" start="4" type="Tile Render Order" default="Z Order"/>
    <field name="Unk" size="1" start="32" type="bool"/>
  </struct>

  <struct name="Shader Environment" size="16" align="64">
    <field name="Attribute offset" size="32" start="0:0" type="uint"/>
    <field name="FAU count" size="8" start="1:0" type="uint"/>
    <field name="Resources" size="48" start="8:0" type="address"/>
    <field name="Shader" size="48" start="10:0" type="address"/>
    <field name="Thread storage" size="48" start="12:0" type="address"/>
    <field name="FAU" size="64" start="14:0" type="address"/>
  </struct>

  <struct name="Position Shader Environment" layout="cs" unpacked="Shader Environment">
    <field name="Attribute offset" size="32" start="0:0" type="uint"/>
    <field name="Resources" size="48" start="0x00:0" type="address"/>
    <field name="Shader" size="48" start="0x10:0" type="address"/>
    <!-- Note that filling the thread storage pointer at 0x1e might
         also be requried for prefix shaders. -->
    <field name="Thread storage" size="48" start="0x18:0" type="address"/>
    <field name="FAU" size="48" start="0x08:0" type="address"/>
    <field name="FAU count" size="8" start="0x08:56" type="uint"/>
  </struct>

  <struct name="Varying Shader Environment" layout="cs" unpacked="Shader Environment">
    <field name="Attribute offset" size="32" start="0:0" type="uint"/>
    <field name="Resources" size="48" start="0x00:0" type="address"/>
    <field name="Shader" size="48" start="0x12:0" type="address"/>
    <!-- These field alias with position shaders -->
    <field name="Thread storage" size="48" start="0x18:0" type="address"/>
    <field name="FAU" size="48" start="0x08:0" type="address"/>
    <field name="FAU count" size="8" start="0x08:56" type="uint"/>
  </struct>

  <struct name="Fragment Shader Environment" layout="cs" unpacked="Shader Environment">
    <field name="Attribute offset" size="32" start="0:0" type="uint"/>
    <field name="Resources" size="48" start="0x04:0" type="address"/>
    <field name="Shader" size="48" start="0x14:0" type="address"/>
    <field name="Thread storage" size="48" start="0x18:0" type="address"/>
    <field name="FAU" size="48" start="0x0c:0" type="address"/>
    <field name="FAU count" size="8" start="0x0c:56" type="uint"/>
  </struct>

  <struct name="Compute Shader Environment" layout="cs" unpacked="Shader Environment">
    <field name="Attribute offset" size="32" start="0:0" type="uint"/>
    <field name="Resources" size="48" start="0x06:0" type="address"/>
    <field name="Shader" size="48" start="0x16:0" type="address"/>
    <field name="Thread storage" size="48" start="0x1e:0" type="address"/>
    <field name="FAU" size="48" start="0x0e:0" type="address"/>
    <field name="FAU count" size="8" start="0x0e:56" type="uint"/>
  </struct>

  <struct name="Compute Payload" layout="cs">
    <field name="Workgroup size X" size="10" start="0x21:0" type="uint" modifier="minus(1)"/>
    <field name="Workgroup size Y" size="10" start="0x21:10" type="uint" modifier="minus(1)"/>
    <field name="Workgroup size Z" size="10" start="0x21:20" type="uint" modifier="minus(1)"/>
    <field name="Allow merging workgroups" size="1" start="0x21:31" type="bool"/>
    <field name="Offset X" size="32" start="0x22:0" type="uint"/>
    <field name="Offset Y" size="32" start="0x23:0" type="uint"/>
    <field name="Offset Z" size="32" start="0x24:0" type="uint"/>
    <field name="Workgroup count X" size="32" start="0x25:0" type="uint"/>
    <field name="Workgroup count Y" size="32" start="0x26:0" type="uint"/>
    <field name="Workgroup count Z" size="32" start="0x27:0" type="uint"/>
    <field name="Compute" size="512" start="0x00:0" type="Compute Shader Environment"/>
  </struct>

  <struct name="Compute Launch" layout="ins" op="4">
    <field name="Unk 1" size="14" start="0" type="uint" default="1"/>
    <field name="Unk 2" size="2" start="14" type="uint" default="2"/>
    <field name="Unk 3" size="8" start="40" type="hex" default="255"/>
  </struct>

  <!-- Compute job also covers vertex and geometry operations -->
  <aggregate name="Compute Job" align="128">
    <section name="Payload" offset="32" type="Compute Payload"/>
  </aggregate>

  <struct name="Resource" size="4" align="16">
    <field name="Address" size="56" start="0:0" type="address"/>
    <field name="Contains descriptors" size="1" start="1:24" type="bool" default="true"/>
    <field name="Size" size="64" start="2:0" type="uint"/> <!-- bytes -->
  </struct>

  <struct name="Depth/stencil" size="8" align="32">
    <field name="Type" size="4" start="0:0" type="Descriptor Type" default="Depth/stencil"/>
    <field name="Front compare function" size="3" start="0:4" type="Func"/>
    <field name="Front stencil fail" size="3" start="0:7" type="Stencil Op"/>
    <field name="Front depth fail" size="3" start="0:10" type="Stencil Op"/>
    <field name="Front depth pass" size="3" start="0:13" type="Stencil Op"/>
    <field name="Back compare function" size="3" start="0:16" type="Func"/>
    <field name="Back stencil fail" size="3" start="0:19" type="Stencil Op"/>
    <field name="Back depth fail" size="3" start="0:22" type="Stencil Op"/>
    <field name="Back depth pass" size="3" start="0:25" type="Stencil Op"/>
    <field name="Stencil from shader" size="1" start="0:30" type="bool"/>
    <field name="Stencil test enable" size="1" start="0:31" type="bool"/>
    <field name="Front write mask" size="8" start="1:0" type="hex"/>
    <field name="Back write mask" size="8" start="1:8" type="hex"/>
    <field name="Front value mask" size="8" start="1:16" type="hex"/>
    <field name="Back value mask" size="8" start="1:24" type="hex"/>
    <field name="Front reference value" size="8" start="2:0" type="hex"/>
    <field name="Back reference value" size="8" start="2:8" type="hex"/>
    <field name="Depth cull enable" size="1" start="4:22" type="bool"/>
    <field name="Depth clamp mode" size="2" start="4:23" type="Depth Clamp Mode"/>
    <field name="Depth source" size="2" start="4:25" type="Depth Source" default="Fixed function"/>
    <field name="Depth write enable" size="1" start="4:27" type="bool"/>
    <field name="Depth bias enable" size="1" start="4:28" type="bool"/>
    <field name="Depth function" size="3" start="4:29" type="Func"/>
    <field name="Depth units" size="32" start="5:0" type="float"/>
    <field name="Depth factor" size="32" start="6:0" type="float"/>
    <field name="Depth bias clamp" size="32" start="7:0" type="float"/>
  </struct>

  <struct name="Vertex Array" size="4">
    <field name="Packet" size="1" start="0:0" type="bool"/>

    <!-- Written by hardware in packet mode -->
    <field name="Pointer" size="58" start="0:6" type="address" modifier="shr(6)"/>

    <!-- Written by hardware, leave zero -->
    <field name="Vertex packet stride" size="16" start="2:0" type="uint"/>
    <field name="Vertex attribute stride" size="16" start="2:16" type="uint"/>
    <!-- Comes from the w26 register -->
    <field name="Unk" size="24" start="3:0" type="hex"/>
  </struct>

  <struct name="Draw" layout="cs">
    <field name="Allow forward pixel to kill" size="1" start="0x39:0" type="bool"/>
    <field name="Allow forward pixel to be killed" size="1" start="0x39:1" type="bool"/>
    <field name="Pixel kill operation" size="2" start="0x39:2" type="Pixel Kill"/>
    <field name="ZS update operation" size="2" start="0x39:4" type="Pixel Kill"/>
    <field name="Allow primitive reorder" size="1" start="0x39:6" type="bool"/>
    <field name="Overdraw alpha0" size="1" start="0x39:7" type="bool"/>
    <field name="Overdraw alpha1" size="1" start="0x39:8" type="bool"/>
    <field name="Clean Fragment Write" size="1" start="0x39:9" type="bool"/>
    <field name="Primitive Barrier" size="1" start="0x39:10" type="bool"/>
    <field name="Evaluate per-sample" size="1" start="0x39:11" type="bool"/>
    <field name="Single-sampled lines" size="1" start="0x39:13" type="bool"/>
    <field name="Occlusion query" size="2" start="0x39:14" type="Occlusion Mode" default="Disabled"/>
    <field name="Front face CCW" size="1" start="0x39:16" type="bool"/>
    <field name="Cull front face" size="1" start="0x39:17" type="bool"/>
    <field name="Cull back face" size="1" start="0x39:18" type="bool"/>
    <field name="Multisample enable" size="1" start="0x39:19" type="bool"/>
    <field name="Shader modifies coverage" size="1" start="0x39:20" type="bool"/>
    <field name="Alpha-to-coverage Invert" size="1" start="0x39:21" type="bool"/>
    <field name="Alpha-to-coverage" size="1" start="0x39:22" type="bool"/>
    <field name="Scissor to bounding box" size="1" start="0x39:23" type="bool"/>
    <field name="Sample mask" size="16" start="0x3a:0" type="uint"/>
    <field name="Render target mask" size="16" start="0x3a:16" type="uint"/>

    <field name="Unk" size="24" start="0x26:0" type="hex" default="0x1000"/>

    <!-- TODO v10, Doesn't exist in register space but is written to the heap -->
    <field name="Vertex array" size="128" start="2:0" type="Vertex Array"/>

    <field name="Minimum Z" size="32" start="0x2c:0" type="float"/>
    <field name="Maximum Z" size="32" start="0x2d:0" type="float"/>
    <field name="Depth/stencil" size="48" start="0x34:0" type="address"/>
    <field name="Blend count" size="4" start="0x32:0" type="uint"/>
    <field name="Blend" size="44" start="0x32:4" type="address" modifier="shr(4)"/>
    <field name="Occlusion" size="48" start="0x2e:0" type="address"/>
    <field name="Shader" size="512" start="0x0:0" type="Fragment Shader Environment"/>
  </struct>

  <struct name="Draw No CS" align="64" unpacked="Draw">
    <field name="Allow forward pixel to kill" size="1" start="0:0" type="bool"/>
    <field name="Allow forward pixel to be killed" size="1" start="0:1" type="bool"/>
    <field name="Pixel kill operation" size="2" start="0:2" type="Pixel Kill"/>
    <field name="ZS update operation" size="2" start="0:4" type="Pixel Kill"/>
    <field name="Allow primitive reorder" size="1" start="0:6" type="bool"/>
    <field name="Overdraw alpha0" size="1" start="0:7" type="bool"/>
    <field name="Overdraw alpha1" size="1" start="0:8" type="bool"/>
    <field name="Clean Fragment Write" size="1" start="0:9" type="bool"/>
    <field name="Primitive Barrier" size="1" start="0:10" type="bool"/>
    <field name="Evaluate per-sample" size="1" start="0:11" type="bool"/>
    <field name="Single-sampled lines" size="1" start="0:13" type="bool"/>
    <field name="Occlusion query" size="2" start="0:14" type="Occlusion Mode" default="Disabled"/>
    <field name="Front face CCW" size="1" start="0:16" type="bool"/>
    <field name="Cull front face" size="1" start="0:17" type="bool"/>
    <field name="Cull back face" size="1" start="0:18" type="bool"/>
    <field name="Multisample enable" size="1" start="0:19" type="bool"/>
    <field name="Shader modifies coverage" size="1" start="0:20" type="bool"/>
    <field name="Alpha-to-coverage Invert" size="1" start="0:21" type="bool"/>
    <field name="Alpha-to-coverage" size="1" start="0:22" type="bool"/>
    <field name="Scissor to bounding box" size="1" start="0:23" type="bool"/>
    <field name="Sample mask" size="16" start="1:0" type="uint"/>
    <field name="Render target mask" size="8" start="1:16" type="hex"/>
    <!-- This is correct, but uncommenting would break things! -->
    <!--<field name="Vertex array" size="128" start="2:0" type="Vertex Array"/>-->
    <field name="Minimum Z" size="32" start="6:0" type="float"/>
    <field name="Maximum Z" size="32" start="7:0" type="float"/>
    <field name="Depth/stencil" size="64" start="10:0" type="address"/>
    <field name="Blend count" size="4" start="12:0" type="uint"/>
    <field name="Blend" size="60" start="12:4" type="address" modifier="shr(4)"/>
    <field name="Occlusion" size="64" start="14:0" type="address"/>
    <field name="Shader" size="512" start="16:0" type="Shader Environment"/>
  </struct>

  <struct name="Count" layout="cs">
    <!-- I think this is right? -->
    <field name="Count" size="32" start="0x22:0" type="uint"/>
  </struct>

  <struct name="Allocation" layout="cs">
    <!-- "Vertex packet stride" is only written by hardware? -->
    <field name="Vertex attribute stride" size="16" start="0x30:0" type="uint"/>
  </struct>

  <struct name="Tiler Pointer" layout="cs">
    <field name="Address" size="48" start="0x28:0" type="address"/>
  </struct>

  <struct name="Primitive Size" layout="cs">
    <field name="Constant" size="32" start="0x3c:0" type="float"/>
    <field name="Size Array" size="48" start="0x3c:0" type="uint"/>
  </struct>

  <struct name="Indices" layout="cs">
    <field name="Address" size="64" start="0x36:0" type="address"/>
    <!-- This seems different from v9, should it live someplace else? -->
    <field name="Size" size="32" start="0x27:0" type="uint"/>
  </struct>

  <!-- TODO: What to do about these? -->
  <aggregate name="Malloc Vertex Job" layout="cs">
    <section name="Primitive" offset="32" type="Primitive"/>
    <section name="Instance Count" offset="48" type="Count"/>
    <section name="Allocation" offset="52" type="Allocation"/>
    <section name="Tiler" offset="56" type="Tiler Pointer"/>
    <section name="Scissor" offset="104" type="Scissor"/>
    <section name="Primitive Size" offset="112" type="Primitive Size"/>
    <section name="Indices" offset="120" type="Indices"/>
    <section name="Draw" offset="128" type="Draw"/>
    <section name="Position" offset="256" type="Position Shader Environment"/>
    <section name="Varying" offset="320" type="Varying Shader Environment"/>
  </aggregate>

  <aggregate name="Tiler Job" layout="cs">
    <section name="Primitive" offset="32" type="Primitive"/>
    <section name="Instance Count" offset="48" type="Count"/>
    <section name="Vertex Count" offset="52" type="Count"/>
    <section name="Tiler" offset="56" type="Tiler Pointer"/>
    <section name="Scissor" offset="104" type="Scissor"/>
    <section name="Primitive Size" offset="112" type="Primitive Size"/>
    <section name="Indices" offset="120" type="Indices"/>
    <section name="Draw" offset="128" type="Draw"/>
  </aggregate>

  <struct name="CS NOP" layout="ins" op="0"/>

  <struct name="CS Add Imm" layout="ins" op="17">
    <field name="Value" size="32" start="0" type="int"/>
    <field name="Src" size="8" start="40" type="register"/>
    <field name="Dest" size="8" start="48" type="register"/>
  </struct>

  <struct name="CS LDR" layout="ins" op="20">
      <field name="Offset" size="16" start="0" type="int"/>
      <field name="Register Mask" size="16" start="16" type="hex"/>
      <field name="Addr" size="8" start="40" type="register"/>
      <field name="Register Base" size="8" start="48" type="register"/>
  </struct>

  <struct name="CS STR" layout="ins" op="21">
      <field name="Offset" size="16" start="0" type="int"/>
      <field name="Register Mask" size="16" start="16" type="hex"/>
      <field name="Addr" size="8" start="40" type="register"/>
      <field name="Register Base" size="8" start="48" type="register"/>
  </struct>

  <!-- TODO: The next four are all just about equivalent... they
       should have a shared definition. -->
  <struct name="CS EVADD" layout="ins" op="37">
    <field name="Unk Flag" size="1" start="0" type="bool" default="true"/>
    <field name="No IRQ" size="1" start="2" type="bool" default="false"/>
    <field name="Unk 2" size="16" start="16" type="hex" default="253"/>
    <!-- TODO: Separate types for 32-bit and 64-bit registers -->
    <field name="Value" size="8" start="32" type="register"/>
    <field name="Addr" size="8" start="40" type="register"/>
    <field name="Unk 3" size="8" start="48" type="hex" default="1"/>
  </struct>

  <struct name="CS EVADD 64" layout="ins" op="51">
    <field name="Unk Flag" size="1" start="0" type="bool" default="true"/>
    <field name="No IRQ" size="1" start="2" type="bool" default="false"/>
    <field name="Unk 2" size="16" start="16" type="hex" default="253"/>
    <!-- TODO: Separate types for 32-bit and 64-bit registers -->
    <field name="Value" size="8" start="32" type="register"/>
    <field name="Addr" size="8" start="40" type="register"/>
    <field name="Unk 3" size="8" start="48" type="hex" default="1"/>
  </struct>

  <struct name="CS EVSTR" layout="ins" op="38">
    <field name="Unk Flag" size="1" start="0" type="bool" default="true"/>
    <field name="No IRQ" size="1" start="2" type="bool" default="false"/>
    <field name="Unk 2" size="16" start="16" type="hex" default="253"/>
    <!-- TODO: Separate types for 32-bit and 64-bit registers -->
    <field name="Value" size="8" start="32" type="register"/>
    <field name="Addr" size="8" start="40" type="register"/>
    <field name="Unk 3" size="8" start="48" type="hex" default="1"/>
  </struct>

  <struct name="CS EVSTR 64" layout="ins" op="52">
    <field name="Unk Flag" size="1" start="0" type="bool" default="true"/>
    <field name="No IRQ" size="1" start="2" type="bool" default="false"/>
    <field name="Unk 2" size="16" start="16" type="hex" default="253"/>
    <!-- TODO: Separate types for 32-bit and 64-bit registers -->
    <field name="Value" size="8" start="32" type="register"/>
    <field name="Addr" size="8" start="40" type="register"/>
    <field name="Unk 3" size="8" start="48" type="hex" default="1"/>
  </struct>

  <!-- Arm uses "greater than" and "less or equal", but I chose these
       names to match up with AArch64 comparison names - these are
       unsigned, while branch instructions are signed. -->
  <enum name="Wait Condition">
    <value name="Lower or same" value="0"/>
    <value name="Higher" value="1"/>
  </enum>

  <!-- TODO: Use a single instruction with two opcodes for bitness -->
  <struct name="CS EVWAIT" layout="ins" op="39">
    <field name="No error" size="1" start="0" type="bool"/>
    <field name="Condition" size="1" start="28" type="Wait Condition"/>
    <field name="Value" size="8" start="32" type="register"/>
    <field name="Addr" size="8" start="40" type="register"/>
  </struct>

  <struct name="CS EVWAIT 64" layout="ins" op="53">
    <field name="No error" size="1" start="0" type="bool"/>
    <field name="Condition" size="1" start="28" type="Wait Condition"/>
    <field name="Value" size="8" start="32" type="register"/>
    <field name="Addr" size="8" start="40" type="register"/>
  </struct>

  <struct name="CS Slot" layout="ins" op="23">
    <field name="Index" size="3" start="0" type="uint"/>
  </struct>

  <struct name="CS Wait" layout="ins" op="3">
    <field name="Slots" size="8" start="16" type="hex"/>
  </struct>

  <struct name="CS Resources" layout="ins" op="34">
    <field name="Mask" size="56" start="0" type="hex"/>
    <field name="Compute" size="1" start="0" type="bool"/>
    <field name="Fragment" size="1" start="1" type="bool"/>
    <field name="Tiler" size="1" start="2" type="bool"/>
    <field name="IDVS" size="1" start="3" type="bool"/>
  </struct>

  <struct name="CS Call" layout="ins" op="32">
    <field name="Length" size="8" start="32" type="register"/>
    <field name="Address" size="8" start="40" type="register"/>
  </struct>

  <struct name="CS Tailcall" layout="ins" op="33">
    <field name="Length" size="8" start="32" type="register"/>
    <field name="Address" size="8" start="40" type="register"/>
  </struct>

  <struct name="CS Flush Tiler" layout="ins" op="9"/>

  <!-- TODO: What else can the instruction do? -->
  <struct name="CS HEAPCLEAR" layout="ins" op="11">
    <field name="Unk 1" size="16" start="0" type="hex" default="1"/>
    <field name="Slots" size="8" start="16" type="hex"/>
    <field name="End" size="8" start="32" type="register"/>
    <field name="Start" size="8" start="40" type="register"/>
    <field name="Unk 2" size="8" start="48" type="hex" default="2"/>
  </struct>

  <struct name="CS HEAPCTX" layout="ins" op="48">
    <field name="Address" size="8" start="40" type="register"/>
  </struct>

  <enum name="Heap Statistic">
    <value name="V/T Start" value="0"/>
    <value name="V/T End" value="1"/>
    <value name="Fragment End" value="3"/>
  </enum>

  <struct name="CS HEAPINC" layout="ins" op="49">
    <field name="Type" size="8" start="32" type="Heap Statistic"/>
  </struct>
</panxml>
